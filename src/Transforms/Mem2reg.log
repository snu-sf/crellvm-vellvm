./testcases/t10.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     void @foo () nounwind{
entry:
  ret void
}
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  call   void ()* @foo () 
  br label %bb 
bb:
  %_tmp_2 = phi i32 [0, %entry]
  br label %end 
end:
  ret i32 %_tmp_2
}

real	0m0.043s
user	0m0.020s
sys	0m0.016s
./testcases/t11.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     void @foo () nounwind{
entry:
  ret void
}
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  call   void ()* @foo () 
  br label %bb 
bb:
  %_tmp_2 = phi i32 [undef, %entry]
  br label %end 
end:
  ret i32 %_tmp_2
}

real	0m0.038s
user	0m0.017s
sys	0m0.020s
./testcases/t12.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  br label %bb 
bb:
  %_tmp_2 = phi i32 [1, %bb],[0, %entry]
  br i1 -1, label %end, label %bb
end:
  %_tmp_1 = phi i32 [1, %bb]
  ret i32 %_tmp_2
}

real	0m0.038s
user	0m0.019s
sys	0m0.018s
./testcases/t13.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  br label %bb1 
bb:
  br label %bb1 
bb1:
  %_tmp_2 = phi i32 [1, %bb],[0, %entry]
  br i1 -1, label %end, label %bb
end:
  ret i32 %_tmp_2
}

real	0m0.040s
user	0m0.017s
sys	0m0.021s
./testcases/t14.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  %q = alloca i32, i32 1
  %c = trunc i32 undef to i1
  %a1 = add i32 undef, undef
  %a2 = add i32 undef, undef
  %a3 = add i32 undef, undef
  %a4 = add i32 undef, undef
  br label %loop 
loop:
  %_tmp_8 = phi i32 [%_tmp_8, %bb2],[undef, %entry]
  %_tmp_4 = phi i32 [%_tmp_4, %bb2],[undef, %entry]
  br i1 %c, label %bb1, label %bb2
bb1:
  %0 = add i32 %a1, %a3
  %1 = add i32 %a2, %a4
  br label %end 
bb2:
  %2 = add i32 %a1, %a3
  %3 = add i32 %a2, %a4
  br i1 -1, label %end, label %loop
end:
  %4 = phi i32 [%0, %bb1],[%2, %bb2]
  %5 = phi i32 [%1, %bb1],[%3, %bb2]
  %6 = add i32 %4, %5
  ret i32 %6
}

real	0m0.041s
user	0m0.025s
sys	0m0.016s
./testcases/t15.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  %q = alloca i32, i32 1
  br label %bb 
bb:
  %_tmp_4 = phi i32 [undef, %entry]
  %_tmp_2 = phi i32 [undef, %entry]
  %0 = add i32 undef, %_tmp_2
  br label %end 
end:
  ret i32 %0
}

real	0m0.041s
user	0m0.021s
sys	0m0.017s
./testcases/t16.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     void @foo () nounwind{
entry:
  ret void
}
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  br i1 -1, label %bb1, label %bb2
bb1:
  %_tmp_3 = phi i32 [0, %entry]
  call   void ()* @foo () 
  br label %end 
bb2:
  %_tmp_2 = phi i32 [0, %entry]
  br label %end 
end:
  %_tmp_1 = phi i32 [%_tmp_2, %bb2],[%_tmp_3, %bb1]
  ret i32 %_tmp_1
}

real	0m0.041s
user	0m0.023s
sys	0m0.016s
./testcases/t17.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  %q = alloca i32, i32 1
  %0 = add i32 undef, undef
  br i1 -1, label %bb1, label %bb2
bb1:
  %_tmp_18 = phi i32 [undef, %entry]
  %_tmp_9 = phi i32 [undef, %entry]
  %1 = add i32 undef, undef
  br label %merge1 
bb2:
  %_tmp_17 = phi i32 [undef, %entry]
  %_tmp_8 = phi i32 [undef, %entry]
  %2 = add i32 undef, undef
  br label %merge1 
merge1:
  %_tmp_16 = phi i32 [%_tmp_17, %bb2],[%_tmp_18, %bb1]
  %_tmp_7 = phi i32 [%_tmp_8, %bb2],[%_tmp_9, %bb1]
  %3 = phi i32 [%1, %bb1],[%2, %bb2]
  br i1 -1, label %bb3, label %bb4
bb3:
  %4 = add i32 undef, undef
  br label %merge2 
bb4:
  %5 = add i32 undef, undef
  br label %merge2 
merge2:
  %6 = phi i32 [%4, %bb3],[%5, %bb4]
  br i1 -1, label %bb5, label %bb6
bb5:
  %7 = add i32 undef, undef
  br label %end 
bb6:
  %8 = add i32 undef, undef
  br label %end 
end:
  %9 = phi i32 [%7, %bb5],[%8, %bb6]
  ret i32 %9
}

real	0m0.041s
user	0m0.019s
sys	0m0.020s
./testcases/t18.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %0 = load i32* @g
  br i1 -1, label %bb1, label %bb2
bb1:
  store i32 0, i32* @g
  br label %bb2 
bb2:
  br i1 -1, label %bb3, label %end
bb3:
  %1 = load i32* @g
  br label %end 
end:
  %2 = phi i32 [%1, %bb3],[undef, %bb2]
  ret i32 %2
}
@g =  global i32 16

real	0m0.041s
user	0m0.021s
sys	0m0.018s
./testcases/t19.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
%struct.tree = type { i32,double,double,%struct.tree*,%struct.tree*,%struct.tree*,%struct.tree* }
define     i32 @tsp (%struct.tree*  %t,i32  %sz,i32  %nproc) nounwind{
entry:
  %sz_addr = alloca i32, i32 1
  %nproc_addr = alloca i32, i32 1
  %t2 = sdiv i32 %nproc, 2
  br label %end 
end:
  ret i32 0
}
define     i32 @main () nounwind{
entry:
  ret i32 0
}

real	0m0.043s
user	0m0.022s
sys	0m0.021s
./testcases/t1.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %0 = add i32 4, 5
  br label %bb 
bb:
  br label %end 
end:
  ret i32 %0
}

real	0m0.045s
user	0m0.018s
sys	0m0.016s
./testcases/t20.ll: target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32"
%struct.tree = type { i32,double,double,%struct.tree*,%struct.tree*,%struct.tree*,%struct.tree* }
define internal    %struct.tree* @makelist (%struct.tree*  %t) nounwind{
entry:
  %retval1 = alloca %struct.tree*, i32 1
  %right = alloca %struct.tree*, i32 1
  br i1 -1, label %bb4, label %end
bb4:
  %_tmp_4 = phi %struct.tree* [undef, %entry]
  %_tmp_2 = phi %struct.tree* [undef, %entry]
  br label %end 
end:
  %_tmp_3 = phi %struct.tree* [%_tmp_4, %bb4],[undef, %entry]
  %_tmp_1 = phi %struct.tree* [%_tmp_4, %bb4],[undef, %entry]
  ret %struct.tree* null
}
define     i32 @main () nounwind{
entry:
  ret i32 0
}

real	0m0.038s
user	0m0.007s
sys	0m0.010s
./testcases/t21.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @onintr () nounwind{
entry:
  %retval = alloca i32, i32 1
  unreachable
return:
  %retval1 = load i32* %retval
  ret i32 %retval1
}
define     i32 @main () nounwind{
entry:
  ret i32 0
}

real	0m0.040s
user	0m0.020s
sys	0m0.020s
./testcases/t2.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  %q = alloca i32, i32 1
  %0 = add i32 undef, undef
  br label %bb 
bb:
  %_tmp_4 = phi i32 [undef, %entry]
  %_tmp_2 = phi i32 [undef, %entry]
  %1 = add i32 undef, undef
  %2 = add i32 %0, %1
  br label %end 
end:
  ret i32 %2
}

real	0m0.042s
user	0m0.018s
sys	0m0.021s
./testcases/t3.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  br label %bb 
bb:
  %_tmp_2 = phi i32 [undef, %entry]
  %0 = add i32 undef, %_tmp_2
  br label %end 
end:
  ret i32 %0
}

real	0m0.044s
user	0m0.008s
sys	0m0.011s
./testcases/t4.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  %q = alloca i32, i32 1
  %c = trunc i32 undef to i1
  %a1 = add i32 undef, undef
  %a2 = add i32 undef, undef
  %a3 = add i32 undef, undef
  %a4 = add i32 undef, undef
  br i1 %c, label %bb1, label %bb2
bb1:
  %_tmp_6 = phi i32 [undef, %entry]
  %_tmp_3 = phi i32 [undef, %entry]
  %0 = add i32 %a1, %a3
  %1 = add i32 %a2, %a4
  br label %end 
bb2:
  %_tmp_5 = phi i32 [undef, %entry]
  %_tmp_2 = phi i32 [undef, %entry]
  %2 = add i32 %a1, %a3
  %3 = add i32 %a2, %a4
  br label %end 
end:
  %_tmp_4 = phi i32 [%_tmp_5, %bb2],[%_tmp_6, %bb1]
  %_tmp_1 = phi i32 [%_tmp_2, %bb2],[%_tmp_3, %bb1]
  %4 = phi i32 [%0, %bb1],[%2, %bb2]
  %5 = phi i32 [%1, %bb1],[%3, %bb2]
  %6 = add i32 %4, %5
  ret i32 %6
}

real	0m0.040s
user	0m0.021s
sys	0m0.017s
./testcases/t5.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  %q = alloca i32, i32 1
  br label %bb 
bb:
  %_tmp_4 = phi i32 [0, %entry]
  %_tmp_2 = phi i32 [undef, %entry]
  %0 = add i32 undef, %_tmp_2
  br label %end 
end:
  ret i32 %0
}

real	0m0.041s
user	0m0.023s
sys	0m0.018s
./testcases/t6.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  br i1 -1, label %bb1, label %bb2
bb1:
  %_tmp_3 = phi i32 [undef, %entry]
  %0 = add i32 undef, undef
  br label %end 
bb2:
  %_tmp_2 = phi i32 [undef, %entry]
  %1 = add i32 undef, undef
  br label %end 
end:
  %_tmp_1 = phi i32 [%_tmp_2, %bb2],[%_tmp_3, %bb1]
  %2 = phi i32 [%0, %bb1],[%1, %bb2]
  ret i32 %2
}

real	0m0.039s
user	0m0.017s
sys	0m0.022s
./testcases/t7.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  br i1 -1, label %bb1, label %bb2
bb1:
  %_tmp_3 = phi i32 [undef, %entry]
  br label %end 
bb2:
  %_tmp_2 = phi i32 [undef, %entry]
  br label %end 
end:
  %_tmp_1 = phi i32 [%_tmp_2, %bb2],[%_tmp_3, %bb1]
  %0 = phi i32 [%_tmp_3, %bb1],[1, %bb2]
  %1 = add i32 %_tmp_1, %0
  ret i32 %1
}

real	0m0.043s
user	0m0.021s
sys	0m0.013s
./testcases/t8.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  br label %bb 
bb:
  %_tmp_2 = phi i32 [0, %entry]
  br label %end 
end:
  ret i32 %_tmp_2
}

real	0m0.040s
user	0m0.022s
sys	0m0.016s
./testcases/t9.ll: target datalayout = "E-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64"
define     i32 @main () nounwind{
entry:
  %p = alloca i32, i32 1
  %q = alloca i32, i32 1
  br label %bb 
bb:
  %_tmp_4 = phi i32 [0, %entry]
  %_tmp_2 = phi i32 [0, %entry]
  br label %end 
end:
  ret i32 %_tmp_2
}

real	0m0.043s
user	0m0.022s
sys	0m0.019s
bh: Coq M2R

real	0m12.854s
user	0m11.672s
sys	0m0.040s
LLVM ld1
/tmp/ccS6jJ4n.o: In function `getparam':
bha.exe.bc:(.text+0x2977): warning: the `gets' function is dangerous and should not be used.

real	0m2.660s
user	0m2.521s
sys	0m0.068s
Coq M2R no phielim

real	0m6.211s
user	0m5.891s
sys	0m0.103s
LLVM ld2
/tmp/cclsxe7u.o: In function `getparam':
bhc.exe.bc:(.text+0x2d69): warning: the `gets' function is dangerous and should not be used.

real	0m4.085s
user	0m3.456s
sys	0m0.063s
LLVM ld3
/tmp/ccrLmto9.o: In function `getparam':
bhb.exe.bc:(.text+0x3aaf): warning: the `gets' function is dangerous and should not be used.

real	0m2.568s
user	0m0.985s
sys	0m0.044s
bisort: Coq M2R

real	0m0.119s
user	0m0.096s
sys	0m0.012s
LLVM ld1

real	0m0.525s
user	0m0.330s
sys	0m0.036s
Coq M2R no phielim

real	0m0.120s
user	0m0.032s
sys	0m0.007s
LLVM ld2

real	0m0.615s
user	0m0.290s
sys	0m0.046s
LLVM ld3

real	0m0.572s
user	0m0.483s
sys	0m0.060s
em3d: Coq M2R

real	0m0.096s
user	0m0.073s
sys	0m0.017s
LLVM ld1

real	0m0.529s
user	0m0.455s
sys	0m0.059s
Coq M2R no phielim

real	0m0.093s
user	0m0.075s
sys	0m0.014s
LLVM ld2

real	0m0.668s
user	0m0.240s
sys	0m0.061s
LLVM ld3

real	0m0.597s
user	0m0.463s
sys	0m0.048s
health: Coq M2R

real	0m0.146s
user	0m0.130s
sys	0m0.014s
LLVM ld1

real	0m0.660s
user	0m0.549s
sys	0m0.045s
Coq M2R no phielim

real	0m0.160s
user	0m0.138s
sys	0m0.018s
LLVM ld2

real	0m0.763s
user	0m0.317s
sys	0m0.054s
LLVM ld3

real	0m0.705s
user	0m0.292s
sys	0m0.049s
mst: Coq M2R

real	0m0.165s
user	0m0.049s
sys	0m0.004s
LLVM ld1

real	0m0.561s
user	0m0.444s
sys	0m0.061s
Coq M2R no phielim

real	0m0.142s
user	0m0.112s
sys	0m0.025s
LLVM ld2

real	0m0.624s
user	0m0.540s
sys	0m0.056s
LLVM ld3

real	0m0.581s
user	0m0.486s
sys	0m0.072s
perimeter: Coq M2R

real	0m0.363s
user	0m0.300s
sys	0m0.019s
LLVM ld1

real	0m0.699s
user	0m0.575s
sys	0m0.057s
Coq M2R no phielim

real	0m0.324s
user	0m0.269s
sys	0m0.022s
LLVM ld2

real	0m0.829s
user	0m0.321s
sys	0m0.046s
LLVM ld3

real	0m0.715s
user	0m0.572s
sys	0m0.046s
power: Coq M2R

real	0m0.423s
user	0m0.132s
sys	0m0.009s
LLVM ld1

real	0m1.655s
user	0m1.358s
sys	0m0.078s
Coq M2R no phielim

real	0m0.433s
user	0m0.385s
sys	0m0.042s
LLVM ld2

real	0m1.654s
user	0m1.516s
sys	0m0.069s
LLVM ld3

real	0m1.571s
user	0m1.283s
sys	0m0.055s
treeadd: Coq M2R

real	0m0.055s
user	0m0.035s
sys	0m0.007s
LLVM ld1

real	0m0.326s
user	0m0.183s
sys	0m0.047s
Coq M2R no phielim

real	0m0.051s
user	0m0.031s
sys	0m0.013s
LLVM ld2

real	0m0.339s
user	0m0.226s
sys	0m0.054s
LLVM ld3

real	0m0.350s
user	0m0.176s
sys	0m0.055s
tsp: Coq M2R

real	0m1.649s
user	0m1.398s
sys	0m0.018s
LLVM ld1

real	0m0.775s
user	0m0.643s
sys	0m0.052s
Coq M2R no phielim

real	0m0.743s
user	0m0.647s
sys	0m0.035s
LLVM ld2

real	0m1.059s
user	0m0.965s
sys	0m0.062s
LLVM ld3

real	0m0.831s
user	0m0.652s
sys	0m0.055s
bh b: 
real	0m19.527s
user	0m18.974s
sys	0m0.011s
bh a: 
real	0m12.524s
user	0m12.126s
sys	0m0.008s
bh c: 
real	0m12.817s
user	0m12.420s
sys	0m0.005s
bisort b: 
real	0m33.314s
user	0m31.964s
sys	0m0.140s
bisort a: 
real	0m22.969s
user	0m22.118s
sys	0m0.124s
bisort c: 
real	0m23.549s
user	0m22.629s
sys	0m0.132s
em3d b: 
real	1m7.447s
user	1m4.547s
sys	0m0.654s
em3d a: 
real	0m27.856s
user	0m26.353s
sys	0m0.593s
em3d c: 
real	0m27.920s
user	0m26.573s
sys	0m0.550s
health b: 
real	0m25.838s
user	0m8.472s
sys	0m0.102s
health a: 
real	0m18.054s
user	0m17.123s
sys	0m0.282s
health c: 
real	0m18.194s
user	0m5.922s
sys	0m0.112s
mst b: 
real	0m7.904s
user	0m7.161s
sys	0m0.514s
mst a: 
real	0m5.582s
user	0m4.892s
sys	0m0.497s
mst c: 
real	0m5.712s
user	0m5.017s
sys	0m0.492s
perimeter b: 
real	1m29.733s
user	1m26.846s
sys	0m0.035s
perimeter a: 
real	1m0.039s
user	0m57.978s
sys	0m0.027s
perimeter c: 
real	0m58.520s
user	0m56.472s
sys	0m0.021s
power b: 
real	0m1.933s
user	0m0.636s
sys	0m0.002s
power a: 
real	0m1.954s
user	0m1.923s
sys	0m0.006s
power c: 
real	0m1.948s
user	0m0.653s
sys	0m0.004s
treeadd b: 
real	0m9.370s
user	0m5.680s
sys	0m0.351s
treeadd a: 
real	0m6.418s
user	0m5.620s
sys	0m0.533s
treeadd c: 
real	0m6.381s
user	0m5.328s
sys	0m0.431s
tsp b: 
real	0m12.108s
user	0m11.539s
sys	0m0.171s
tsp a: 
real	0m9.943s
user	0m9.443s
sys	0m0.162s
tsp c: 
real	0m10.027s
user	0m9.633s
sys	0m0.169s
129.compress: Coq M2R

real	0m0.585s
user	0m0.520s
sys	0m0.030s
LLVM ld1

real	0m1.289s
user	0m1.137s
sys	0m0.080s
Coq M2R no phielim

real	0m0.555s
user	0m0.486s
sys	0m0.047s
LLVM ld2

real	0m1.536s
user	0m1.434s
sys	0m0.064s
LLVM ld3

real	0m1.265s
user	0m1.008s
sys	0m0.066s
099.go: Coq M2R

real	5m5.126s
user	4m40.874s
sys	0m0.402s
LLVM ld1

real	0m35.651s
user	0m33.879s
sys	0m0.160s
Coq M2R no phielim

real	2m59.122s
user	2m28.196s
sys	0m1.888s
LLVM ld2

real	0m59.857s
user	0m57.453s
sys	0m0.339s
LLVM ld3

real	0m35.345s
user	0m32.336s
sys	0m0.155s
130.li: Coq M2R

real	0m8.315s
user	0m7.937s
sys	0m0.125s
LLVM ld1

real	0m10.534s
user	0m9.824s
sys	0m0.101s
Coq M2R no phielim

real	0m7.400s
user	0m6.842s
sys	0m0.304s
LLVM ld2

real	0m12.631s
user	0m6.417s
sys	0m0.091s
LLVM ld3

real	0m9.659s
user	0m3.982s
sys	0m0.082s
132.ijpeg: Coq M2R

real	0m44.880s
user	0m42.727s
sys	0m0.216s
LLVM ld1

real	0m22.779s
user	0m20.407s
sys	0m0.108s
Coq M2R no phielim

real	0m31.964s
user	0m30.067s
sys	0m0.709s
LLVM ld2

real	0m30.315s
user	0m28.835s
sys	0m0.187s
LLVM ld3

real	0m22.252s
user	0m19.931s
sys	0m0.133s
099.go b: 
real	0m19.210s
user	0m18.460s
sys	0m0.009s
099.go a: 
real	0m13.187s
user	0m12.631s
sys	0m0.010s
099.go c: 
real	0m13.423s
user	0m12.957s
sys	0m0.005s
129.compress b: 
real	1m27.028s
user	1m23.567s
sys	0m0.137s
129.compress a: 
real	0m55.089s
user	0m52.730s
sys	0m0.109s
129.compress c: 
real	0m53.432s
user	0m51.368s
sys	0m0.107s
132.ijpeg b: 
real	0m46.292s
user	0m43.590s
sys	0m0.380s
132.ijpeg a: 
real	0m24.563s
user	0m8.005s
sys	0m0.115s
132.ijpeg c: 
real	0m26.409s
user	0m8.619s
sys	0m0.115s
